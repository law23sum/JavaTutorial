<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="19" passed="19" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-06T13:33:48 EDT" name="tutorialSuite" finished-at="2025-09-06T13:33:48 EDT" duration-ms="54">
    <groups>
      <group name="negative">
        <method signature="AnnotationsTest.login_lockout_afterThreeFailures()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" name="login_lockout_afterThreeFailures" class="com.tutorial.testing.testng.tests.AnnotationsTest"/>
        <method signature="AnnotationsTest.user_creation_invalidEmail_rejected(java.lang.String)[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" name="user_creation_invalidEmail_rejected" class="com.tutorial.testing.testng.tests.AnnotationsTest"/>
      </group> <!-- negative -->
      <group name="feature">
        <method signature="AnnotationsTest.search_v2_featureFlag_controlsBehavior()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" name="search_v2_featureFlag_controlsBehavior" class="com.tutorial.testing.testng.tests.AnnotationsTest"/>
      </group> <!-- feature -->
      <group name="auth">
        <method signature="AnnotationsTest.login_allRoles_happyPath(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" name="login_allRoles_happyPath" class="com.tutorial.testing.testng.tests.AnnotationsTest"/>
        <method signature="AnnotationsTest.login_lockout_afterThreeFailures()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" name="login_lockout_afterThreeFailures" class="com.tutorial.testing.testng.tests.AnnotationsTest"/>
      </group> <!-- auth -->
      <group name="regression">
        <method signature="GroupsTest.deeperCheck()[pri:0, instance:com.tutorial.testing.testng.tests.GroupsTest@e3b3b2f]" name="deeperCheck" class="com.tutorial.testing.testng.tests.GroupsTest"/>
      </group> <!-- regression -->
      <group name="flaky">
        <method signature="AnnotationsTest.payment_charge_transientFlakes_areRetried()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" name="payment_charge_transientFlakes_areRetried" class="com.tutorial.testing.testng.tests.AnnotationsTest"/>
      </group> <!-- flaky -->
      <group name="payments">
        <method signature="AnnotationsTest.payment_charge_transientFlakes_areRetried()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" name="payment_charge_transientFlakes_areRetried" class="com.tutorial.testing.testng.tests.AnnotationsTest"/>
      </group> <!-- payments -->
      <group name="smoke">
        <method signature="AnnotationsTest.login_allRoles_happyPath(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" name="login_allRoles_happyPath" class="com.tutorial.testing.testng.tests.AnnotationsTest"/>
        <method signature="GroupsTest.fastCheck()[pri:0, instance:com.tutorial.testing.testng.tests.GroupsTest@e3b3b2f]" name="fastCheck" class="com.tutorial.testing.testng.tests.GroupsTest"/>
      </group> <!-- smoke -->
      <group name="validation">
        <method signature="AnnotationsTest.user_creation_invalidEmail_rejected(java.lang.String)[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" name="user_creation_invalidEmail_rejected" class="com.tutorial.testing.testng.tests.AnnotationsTest"/>
      </group> <!-- validation -->
      <group name="flow">
        <method signature="AnnotationsTest.admin_only_privilegedAction_requiresLogin()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" name="admin_only_privilegedAction_requiresLogin" class="com.tutorial.testing.testng.tests.AnnotationsTest"/>
      </group> <!-- flow -->
    </groups>
    <test started-at="2025-09-06T13:33:48 EDT" name="TestNG Demos" finished-at="2025-09-06T13:33:48 EDT" duration-ms="32">
      <class name="com.tutorial.testing.testng.tests.GroupsTest">
        <test-method is-config="true" signature="beforeSmoke()[pri:0, instance:com.tutorial.testing.testng.tests.GroupsTest@e3b3b2f]" started-at="2025-09-06T13:33:48 EDT" name="beforeSmoke" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSmoke -->
        <test-method signature="fastCheck()[pri:0, instance:com.tutorial.testing.testng.tests.GroupsTest@e3b3b2f]" started-at="2025-09-06T13:33:48 EDT" name="fastCheck" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fastCheck -->
        <test-method signature="deeperCheck()[pri:0, instance:com.tutorial.testing.testng.tests.GroupsTest@e3b3b2f]" started-at="2025-09-06T13:33:48 EDT" name="deeperCheck" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deeperCheck -->
      </class> <!-- com.tutorial.testing.testng.tests.GroupsTest -->
      <class name="com.tutorial.testing.testng.tests.DataProviderTest">
        <test-method signature="add_isCorrect(int,int,int)[pri:0, instance:com.tutorial.testing.testng.tests.DataProviderTest@50f6ac94]" started-at="2025-09-06T13:33:48 EDT" name="add_isCorrect" data-provider="numbers" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- add_isCorrect -->
        <test-method signature="add_isCorrect(int,int,int)[pri:0, instance:com.tutorial.testing.testng.tests.DataProviderTest@50f6ac94]" started-at="2025-09-06T13:33:48 EDT" name="add_isCorrect" data-provider="numbers" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- add_isCorrect -->
        <test-method signature="add_isCorrect(int,int,int)[pri:0, instance:com.tutorial.testing.testng.tests.DataProviderTest@50f6ac94]" started-at="2025-09-06T13:33:48 EDT" name="add_isCorrect" data-provider="numbers" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- add_isCorrect -->
      </class> <!-- com.tutorial.testing.testng.tests.DataProviderTest -->
      <class name="com.tutorial.testing.testng.tests.DependenciesTest">
        <test-method signature="stepB()[pri:0, instance:com.tutorial.testing.testng.tests.DependenciesTest@50029372]" started-at="2025-09-06T13:33:48 EDT" name="stepB" finished-at="2025-09-06T13:33:48 EDT" depends-on-methods="com.tutorial.testing.testng.tests.DependenciesTest.stepA" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stepB -->
        <test-method signature="stepA()[pri:0, instance:com.tutorial.testing.testng.tests.DependenciesTest@50029372]" started-at="2025-09-06T13:33:48 EDT" name="stepA" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stepA -->
      </class> <!-- com.tutorial.testing.testng.tests.DependenciesTest -->
      <class name="com.tutorial.testing.testng.tests.AnnotationsTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="beforeClass" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="beforeMethod" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="login_allRoles_happyPath(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="login_allRoles_happyPath" data-provider="validLogins" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin@example.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[correct-horse-battery-staple]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ADMIN]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_allRoles_happyPath -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="beforeMethod" finished-at="2025-09-06T13:33:48 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="afterMethod" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="login_allRoles_happyPath(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="login_allRoles_happyPath" data-provider="validLogins" finished-at="2025-09-06T13:33:48 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user@example.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[user-pass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[USER]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_allRoles_happyPath -->
        <test-method signature="login_allRoles_happyPath(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="login_allRoles_happyPath" data-provider="validLogins" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[qa@example.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qa-pass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[QA]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_allRoles_happyPath -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="beforeMethod" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="afterMethod" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="afterMethod" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="login_lockout_afterThreeFailures()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="login_lockout_afterThreeFailures" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_lockout_afterThreeFailures -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="beforeMethod" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="beforeMethod" finished-at="2025-09-06T13:33:48 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="afterMethod" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="payment_charge_transientFlakes_areRetried()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="payment_charge_transientFlakes_areRetried" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- payment_charge_transientFlakes_areRetried -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="beforeMethod" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="afterMethod" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="search_v2_featureFlag_controlsBehavior()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="search_v2_featureFlag_controlsBehavior" finished-at="2025-09-06T13:33:48 EDT" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- search_v2_featureFlag_controlsBehavior -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="beforeMethod" finished-at="2025-09-06T13:33:48 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="afterMethod" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="user_creation_invalidEmail_rejected(java.lang.String)[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="user_creation_invalidEmail_rejected" data-provider="invalidEmails" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid email: null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid email: null
at com.tutorial.testing.testng.tests.AnnotationsTest$User.<init>(AnnotationsTest.java:73)
at com.tutorial.testing.testng.tests.AnnotationsTest.user_creation_invalidEmail_rejected(AnnotationsTest.java:265)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.gradle.api.internal.tasks.testing.testng.TestNGTestRunner.runTests(TestNGTestRunner.java:131)
at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:103)
at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:64)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)
at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)
at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- user_creation_invalidEmail_rejected -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="afterMethod" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="beforeMethod" finished-at="2025-09-06T13:33:48 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="user_creation_invalidEmail_rejected(java.lang.String)[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="user_creation_invalidEmail_rejected" data-provider="invalidEmails" finished-at="2025-09-06T13:33:48 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[no-at-symbol]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid email: no-at-symbol]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid email: no-at-symbol
at com.tutorial.testing.testng.tests.AnnotationsTest$User.<init>(AnnotationsTest.java:73)
at com.tutorial.testing.testng.tests.AnnotationsTest.user_creation_invalidEmail_rejected(AnnotationsTest.java:265)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.gradle.api.internal.tasks.testing.testng.TestNGTestRunner.runTests(TestNGTestRunner.java:131)
at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:103)
at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:64)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)
at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)
at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- user_creation_invalidEmail_rejected -->
        <test-method signature="user_creation_invalidEmail_rejected(java.lang.String)[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="user_creation_invalidEmail_rejected" data-provider="invalidEmails" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid email: ]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid email: 
at com.tutorial.testing.testng.tests.AnnotationsTest$User.<init>(AnnotationsTest.java:73)
at com.tutorial.testing.testng.tests.AnnotationsTest.user_creation_invalidEmail_rejected(AnnotationsTest.java:265)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.gradle.api.internal.tasks.testing.testng.TestNGTestRunner.runTests(TestNGTestRunner.java:131)
at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:103)
at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:64)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)
at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)
at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- user_creation_invalidEmail_rejected -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="beforeMethod" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="afterMethod" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="user_creation_invalidEmail_rejected(java.lang.String)[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="user_creation_invalidEmail_rejected" data-provider="invalidEmails" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user@bad]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid email: user@bad]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid email: user@bad
at com.tutorial.testing.testng.tests.AnnotationsTest$User.<init>(AnnotationsTest.java:73)
at com.tutorial.testing.testng.tests.AnnotationsTest.user_creation_invalidEmail_rejected(AnnotationsTest.java:265)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.gradle.api.internal.tasks.testing.testng.TestNGTestRunner.runTests(TestNGTestRunner.java:131)
at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:103)
at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:64)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)
at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)
at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- user_creation_invalidEmail_rejected -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="afterMethod" finished-at="2025-09-06T13:33:48 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="afterMethod" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="beforeMethod" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="user_creation_invalidEmail_rejected(java.lang.String)[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="user_creation_invalidEmail_rejected" data-provider="invalidEmails" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@missingLocal]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid email: @missingLocal]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid email: @missingLocal
at com.tutorial.testing.testng.tests.AnnotationsTest$User.<init>(AnnotationsTest.java:73)
at com.tutorial.testing.testng.tests.AnnotationsTest.user_creation_invalidEmail_rejected(AnnotationsTest.java:265)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.gradle.api.internal.tasks.testing.testng.TestNGTestRunner.runTests(TestNGTestRunner.java:131)
at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:103)
at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:64)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)
at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)
at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- user_creation_invalidEmail_rejected -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="afterMethod" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="beforeMethod" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="admin_only_privilegedAction_requiresLogin()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="admin_only_privilegedAction_requiresLogin" finished-at="2025-09-06T13:33:48 EDT" depends-on-methods="com.tutorial.testing.testng.tests.AnnotationsTest.login_allRoles_happyPath" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- admin_only_privilegedAction_requiresLogin -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="afterClass" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="afterMethod" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="beforeMethod" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
      </class> <!-- com.tutorial.testing.testng.tests.AnnotationsTest -->
    </test> <!-- TestNG Demos -->
    <test started-at="2025-09-06T13:33:48 EDT" name="Selenium Demos" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0">
      <class name="com.tutorial.testing.testng.tests.AnnotationsTest">
        <test-method is-config="true" signature="beforeSuite(java.lang.String)[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="beforeSuite" finished-at="2025-09-06T13:33:48 EDT" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[prod]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:com.tutorial.testing.testng.tests.AnnotationsTest@2438dcd]" started-at="2025-09-06T13:33:48 EDT" name="afterSuite" finished-at="2025-09-06T13:33:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.tutorial.testing.testng.tests.AnnotationsTest -->
    </test> <!-- Selenium Demos -->
  </suite> <!-- tutorialSuite -->
</testng-results>
